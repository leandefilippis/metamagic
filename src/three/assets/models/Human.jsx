/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/wraith/human.gltf -r public 
*/

import React, { useRef } from 'react'
import { Mesh } from 'three'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

const Human = (props) => {
  const { nodes, materials } = useGLTF('/wraith/human.gltf')
  const meshRef = useRef()

  useFrame(() => {
    if (!meshRef.current) {
      return
    }
    // meshRef.current.rotation.x += 0.01
    // meshRef.current.rotation.y += 0.01
  })

  return (
    <group {...props} dispose={null}>
      <mesh ref={meshRef} geometry={nodes.Cube.geometry} material={nodes.Cube.material} rotation={[-0.003, 0.024, 0.046]} />
    </group>
  )
}

export default Human

useGLTF.preload('/wraith/human.gltf')
